# This file is autogenerated by maturin v1.5.1 and was slightly modified manually
# To update, run
#
#    maturin generate-ci github --zig > .github/workflows/maturin.yaml
#
name: maturin

# TODO: the build is failing with unresolved import `pyo3::types::PyDate`
on:
  #  push:
  #    branches:
  #      - master
  #    tags:
  #      - "*"
  #  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  # Adapted from https://github.com/marketplace/actions/skip-duplicate-actions
  pre_job:
    continue-on-error: true
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          # https://github.com/marketplace/actions/skip-duplicate-actions#skip-concurrent-workflow-runs
          concurrent_skipping: "same_content_newer"
          # https://github.com/marketplace/actions/skip-duplicate-actions#cancel_others
          # Don't cancel other jobs, they might be pushes to master
          cancel_others: false
          # https://github.com/marketplace/actions/skip-duplicate-actions#do_not_skip
          do_not_skip: '["workflow_dispatch", "schedule", "merge_group", "release"]'
          # https://github.com/marketplace/actions/skip-duplicate-actions#paths
          paths: '["Cargo.*", "pyproject.toml", "python/**", "rust/**"]'

  linux:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
          - runner: ubuntu-latest
            target: s390x
          - runner: ubuntu-latest
            target: ppc64le
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter --zig
          sccache: "true"
          manylinux: auto
        env:
          # To avoid using Python 3.13, because PyO3 is not ready for it
          PYO3_USE_ABI3_FORWARD_COMPATIBILITY: 1
          # To avoid error[E0432]: unresolved import `pyo3::types::PyDate`... but it's not working,
          # this is not as simple as setting an env var, but I can't find how to disable the Limited API
          PYO3_LIMITED_API: ""
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  windows:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          architecture: ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: "true"
        env:
          # To avoid using Python 3.13, because PyO3 is not ready for it
          PYO3_USE_ABI3_FORWARD_COMPATIBILITY: 1
          # To avoid error[E0432]: unresolved import `pyo3::types::PyDate`... but it's not working,
          # this is not as simple as setting an env var, but I can't find how to disable the Limited API
          PYO3_LIMITED_API: ""
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-latest
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: "true"
        env:
          # To avoid using Python 3.13, because PyO3 is not ready for it
          PYO3_USE_ABI3_FORWARD_COMPATIBILITY: 1
          # To avoid error[E0432]: unresolved import `pyo3::types::PyDate`... but it's not working,
          # this is not as simple as setting an env var, but I can't find how to disable the Limited API
          PYO3_LIMITED_API: ""
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, windows, macos, sdist]
    steps:
      - uses: actions/download-artifact@v4
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
