# https://docs.astral.sh/uv/concepts/projects/init/#packaged-applications

[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=61.0", "wheel"]

[dependency-groups]
dev = [
  "pytest-cov>=6.0.0",
  "pytest-datadir>=1.5.0",
  "pytest-env>=1.1.5",
  "pytest-testmon>=2.1.3",
  "pytest-watch>=4.2.0",
  "pytest>=8.3.4",
  "responses>=0.25.3",
]

[project]
# Complete classifier list: http://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: End Users/Desktop",
  "Operating System :: MacOS",
  "Operating System :: Unix",
  "Programming Language :: Go",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Documentation",
  "Topic :: Office/Business",
  "Topic :: Scientific/Engineering",
  "Topic :: Text Processing :: Markup :: Markdown",
]
dependencies = [
  'maya',
  'mistletoe',
  'requests',
  'typer-slim',
]
description = "Logseq Doctor: heal your Markdown files"
keywords = [
  "knowledge-base",
  "knowledge-graph",
  "logseq",
  "logseq-plugin",
  "markdown",
]
license = "MIT"
name = "logseq-doctor"
readme = "docs/readme.md"
requires-python = ">=3.9"
version = "0.3.0"

[[project.authors]]
email = "andreoliwa@sent.com"
name = "W. Augusto Andreoli"

[project.scripts]
lqdpy = "logseq_doctor.cli:app"

[project.urls]
"Changelog" = "https://logseq-doctor.readthedocs.io/en/latest/changelog.html"
"Documentation" = "https://logseq-doctor.readthedocs.io/"
"Issue Tracker" = "https://github.com/andreoliwa/logseq-doctor/issues"
"Source Code" = "https://github.com/andreoliwa/logseq-doctor"

[tool.black]
line-length = 120
target-version = ['py39']

[tool.nitpick]
ignore_styles = [
  "py://nitpick/resources/any/commitlint",
  "py://nitpick/resources/javascript/package-json",
  "py://nitpick/resources/python/310",
  "py://nitpick/resources/python/311",
  "py://nitpick/resources/python/312",
  "py://nitpick/resources/python/38",
  "py://nitpick/resources/python/39",
  "py://nitpick/resources/python/autoflake",
  "py://nitpick/resources/python/bandit",
  "py://nitpick/resources/python/black",
  "py://nitpick/resources/python/flake8",
  "py://nitpick/resources/python/github-workflow",
  "py://nitpick/resources/python/ipython",
  "py://nitpick/resources/python/isort",
  "py://nitpick/resources/python/mypy", # TODO:
  "py://nitpick/resources/python/poetry",
  "py://nitpick/resources/python/poetry-editable",
  "py://nitpick/resources/python/poetry-venv",
  "py://nitpick/resources/python/pylint",
  "py://nitpick/resources/python/tox",
]
# nitpick-start (auto-generated by "nitpick init --suggest" 0.35.0)
# Styles added to the Nitpick Style Library will be appended to the end of the 'style' key.
# If you don't want a style, move it to the 'ignore_styles' key.
# nitpick-end
style = [
  "py://nitpick/resources/any/codeclimate",
  "py://nitpick/resources/any/commitizen",
  "py://nitpick/resources/any/editorconfig",
  "py://nitpick/resources/any/git-legal",
  "py://nitpick/resources/any/pre-commit-hooks",
  "py://nitpick/resources/any/prettier",
  "py://nitpick/resources/markdown/markdownlint",
  "py://nitpick/resources/python/absent",
  "py://nitpick/resources/python/pre-commit-hooks",
  "py://nitpick/resources/python/radon",
  "py://nitpick/resources/python/readthedocs",
  "py://nitpick/resources/python/sonar-python",
  "py://nitpick/resources/shell/bashate",
  "py://nitpick/resources/shell/shellcheck",
  "py://nitpick/resources/shell/shfmt",
  "py://nitpick/resources/toml/toml-sort",
]

[tool.ruff]
# https://docs.astral.sh/ruff/settings/#fix
fix = true
# https://docs.astral.sh/ruff/settings/#line-length
line-length = 120
# https://docs.astral.sh/ruff/settings/#show-fixes
show-fixes = true
# https://docs.astral.sh/ruff/settings/#src
src = ["python/src"]

[tool.ruff.lint]
# https://docs.astral.sh/ruff/settings/#ignore
ignore = [
  "COM812",
  "D107", # Missing docstring in `__init__`
  "D202", # No blank lines allowed after function docstring
  "D203", # 1 blank line required before class docstring
  "D213", # Multi-line docstring summary should start at the second line
  "D401", # First line of docstring should be in imperative mood
  "E402", # Module level import not at top of file
  "E501", # Line too long
  "ERA", # https://docs.astral.sh/ruff/rules/#eradicate-era
  "FBT", # https://docs.astral.sh/ruff/rules/#flake8-boolean-trap-fbt
  "FIX002", # Line contains TO DO, consider resolving the issue
  "ISC001",
  "TD002", # Missing author in TO DO; try: ? or ?
  "TD003", # Missing issue link on the line following this TO DO
]
# https://docs.astral.sh/ruff/settings/#select
select = ["ALL"]

# https://docs.astral.sh/ruff/rules/#flake8-quotes-q
[tool.ruff.lint.flake8-quotes]
inline-quotes = "double"

# https://docs.astral.sh/ruff/rules/#mccabe-c90
[tool.ruff.lint.mccabe]
# https://docs.astral.sh/ruff/settings/#max-complexity
max-complexity = 10

# https://docs.astral.sh/ruff/settings/#per-file-ignores
[tool.ruff.lint.per-file-ignores]
# A001 Variable is shadowing a python builtin
# ANN https://docs.astral.sh/ruff/rules/#flake8-annotations-ann
# B008 Do not perform function call in argument defaults
# D100 Missing docstring in public module
# D103 Missing docstring in public function
# F401 imported but unused
# INP001 File `xxx.py` is part of an implicit namespace package. Add an `__init__.py`.
# PLR0913 Too many arguments to function call
# S101 use of assert detected
# S105 Possible hardcoded password
# T201 `print` found
# T203 `pprint` found
# TCH003 Move standard library import into a type-checking block
"ci/bootstrap.py" = ["ALL"]
"docs/**" = ["ANN", "INP001", "T201", "T203"]
"docs/conf.py" = ["A001"]
"python/logseq_doctor/cli.py" = ["B008", "PLR0913", "UP006"]
"tests/**" = ["D100", "D103", "INP001", "PLR0913", "S101", "S105", "T201", "T203", "TCH003"]
"tests/data/**" = ["INP001"]

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.tomlsort]
all = true
ignore_case = true
in_place = true
trailing_comma_inline_array = true

[tool.uv]
package = true
